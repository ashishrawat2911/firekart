// Mocks generated by Mockito 5.4.2 from annotations
// in data/test/repository/auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:data/model/account_details_model.dart' as _i8;
import 'package:data/model/address_model.dart' as _i9;
import 'package:data/model/cart_model.dart' as _i10;
import 'package:data/model/common/base_response.dart' as _i2;
import 'package:data/model/order_model.dart' as _i11;
import 'package:data/model/product_model.dart' as _i13;
import 'package:data/model/request/add_order_request_model.dart' as _i12;
import 'package:data/model/request/otp_verify_request_model.dart' as _i7;
import 'package:data/model/response/login_response_model.dart' as _i5;
import 'package:data/model/response/otp_verify_response_model.dart' as _i6;
import 'package:data/source/local/local_storage.dart' as _i14;
import 'package:data/source/remote/api_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNetworkResponse_0<T> extends _i1.SmartFake
    implements _i2.NetworkResponse<T> {
  _FakeNetworkResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEmptyNetworkResponse_1 extends _i1.SmartFake
    implements _i2.EmptyNetworkResponse {
  _FakeEmptyNetworkResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.NetworkResponse<_i5.LoginResponseModel>> login(
          String? phoneNumber) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [phoneNumber],
        ),
        returnValue:
            _i4.Future<_i2.NetworkResponse<_i5.LoginResponseModel>>.value(
                _FakeNetworkResponse_0<_i5.LoginResponseModel>(
          this,
          Invocation.method(
            #login,
            [phoneNumber],
          ),
        )),
      ) as _i4.Future<_i2.NetworkResponse<_i5.LoginResponseModel>>);
  @override
  _i4.Future<_i2.NetworkResponse<_i6.OtpVerifyResponseModel>> verifyOtp(
          _i7.OTPVerifyRequestModel? requestModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyOtp,
          [requestModel],
        ),
        returnValue:
            _i4.Future<_i2.NetworkResponse<_i6.OtpVerifyResponseModel>>.value(
                _FakeNetworkResponse_0<_i6.OtpVerifyResponseModel>(
          this,
          Invocation.method(
            #verifyOtp,
            [requestModel],
          ),
        )),
      ) as _i4.Future<_i2.NetworkResponse<_i6.OtpVerifyResponseModel>>);
  @override
  _i4.Future<_i2.NetworkResponse<_i8.AccountDetailsModel>> userDetails() =>
      (super.noSuchMethod(
        Invocation.method(
          #userDetails,
          [],
        ),
        returnValue:
            _i4.Future<_i2.NetworkResponse<_i8.AccountDetailsModel>>.value(
                _FakeNetworkResponse_0<_i8.AccountDetailsModel>(
          this,
          Invocation.method(
            #userDetails,
            [],
          ),
        )),
      ) as _i4.Future<_i2.NetworkResponse<_i8.AccountDetailsModel>>);
  @override
  _i4.Future<_i2.NetworkResponse<List<_i9.AddressModel>>> userAddress() =>
      (super.noSuchMethod(
        Invocation.method(
          #userAddress,
          [],
        ),
        returnValue:
            _i4.Future<_i2.NetworkResponse<List<_i9.AddressModel>>>.value(
                _FakeNetworkResponse_0<List<_i9.AddressModel>>(
          this,
          Invocation.method(
            #userAddress,
            [],
          ),
        )),
      ) as _i4.Future<_i2.NetworkResponse<List<_i9.AddressModel>>>);
  @override
  _i4.Future<_i2.NetworkResponse<List<_i10.CartModel>>> getCarts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCarts,
          [],
        ),
        returnValue:
            _i4.Future<_i2.NetworkResponse<List<_i10.CartModel>>>.value(
                _FakeNetworkResponse_0<List<_i10.CartModel>>(
          this,
          Invocation.method(
            #getCarts,
            [],
          ),
        )),
      ) as _i4.Future<_i2.NetworkResponse<List<_i10.CartModel>>>);
  @override
  _i4.Future<_i2.EmptyNetworkResponse> addToCart(int? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToCart,
          [productId],
        ),
        returnValue: _i4.Future<_i2.EmptyNetworkResponse>.value(
            _FakeEmptyNetworkResponse_1(
          this,
          Invocation.method(
            #addToCart,
            [productId],
          ),
        )),
      ) as _i4.Future<_i2.EmptyNetworkResponse>);
  @override
  _i4.Future<_i2.EmptyNetworkResponse> updateCart(
    int? productId,
    int? quantity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCart,
          [
            productId,
            quantity,
          ],
        ),
        returnValue: _i4.Future<_i2.EmptyNetworkResponse>.value(
            _FakeEmptyNetworkResponse_1(
          this,
          Invocation.method(
            #updateCart,
            [
              productId,
              quantity,
            ],
          ),
        )),
      ) as _i4.Future<_i2.EmptyNetworkResponse>);
  @override
  _i4.Future<_i2.EmptyNetworkResponse> deleteCart(int? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteCart,
          [productId],
        ),
        returnValue: _i4.Future<_i2.EmptyNetworkResponse>.value(
            _FakeEmptyNetworkResponse_1(
          this,
          Invocation.method(
            #deleteCart,
            [productId],
          ),
        )),
      ) as _i4.Future<_i2.EmptyNetworkResponse>);
  @override
  _i4.Future<_i2.NetworkResponse<List<_i11.OrderModel>>> getAllOrders() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllOrders,
          [],
        ),
        returnValue:
            _i4.Future<_i2.NetworkResponse<List<_i11.OrderModel>>>.value(
                _FakeNetworkResponse_0<List<_i11.OrderModel>>(
          this,
          Invocation.method(
            #getAllOrders,
            [],
          ),
        )),
      ) as _i4.Future<_i2.NetworkResponse<List<_i11.OrderModel>>>);
  @override
  _i4.Future<_i2.EmptyNetworkResponse> placeOrder(
          _i12.AddOrderRequestModel? addOrderToModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #placeOrder,
          [addOrderToModel],
        ),
        returnValue: _i4.Future<_i2.EmptyNetworkResponse>.value(
            _FakeEmptyNetworkResponse_1(
          this,
          Invocation.method(
            #placeOrder,
            [addOrderToModel],
          ),
        )),
      ) as _i4.Future<_i2.EmptyNetworkResponse>);
  @override
  _i4.Future<_i2.NetworkResponse<List<_i13.ProductModel>>> getAllProducts(
    int? page,
    int? offset,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllProducts,
          [
            page,
            offset,
          ],
        ),
        returnValue:
            _i4.Future<_i2.NetworkResponse<List<_i13.ProductModel>>>.value(
                _FakeNetworkResponse_0<List<_i13.ProductModel>>(
          this,
          Invocation.method(
            #getAllProducts,
            [
              page,
              offset,
            ],
          ),
        )),
      ) as _i4.Future<_i2.NetworkResponse<List<_i13.ProductModel>>>);
  @override
  _i4.Future<_i2.EmptyNetworkResponse> addAddress(
    String? address,
    String? state,
    String? name,
    String? phoneNumber,
    String? city,
    String? pincode,
    bool? isDefault,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAddress,
          [
            address,
            state,
            name,
            phoneNumber,
            city,
            pincode,
            isDefault,
          ],
        ),
        returnValue: _i4.Future<_i2.EmptyNetworkResponse>.value(
            _FakeEmptyNetworkResponse_1(
          this,
          Invocation.method(
            #addAddress,
            [
              address,
              state,
              name,
              phoneNumber,
              city,
              pincode,
              isDefault,
            ],
          ),
        )),
      ) as _i4.Future<_i2.EmptyNetworkResponse>);
  @override
  _i4.Future<_i2.EmptyNetworkResponse> editAddress(
    int? id,
    String? name,
    String? pincode,
    String? address,
    String? city,
    String? state,
    String? phoneNumber,
    bool? isDefault,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editAddress,
          [
            id,
            name,
            pincode,
            address,
            city,
            state,
            phoneNumber,
            isDefault,
          ],
        ),
        returnValue: _i4.Future<_i2.EmptyNetworkResponse>.value(
            _FakeEmptyNetworkResponse_1(
          this,
          Invocation.method(
            #editAddress,
            [
              id,
              name,
              pincode,
              address,
              city,
              state,
              phoneNumber,
              isDefault,
            ],
          ),
        )),
      ) as _i4.Future<_i2.EmptyNetworkResponse>);
}

/// A class which mocks [LocalStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorage extends _i1.Mock implements _i14.LocalStorage {
  MockLocalStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isLoggedIn),
        returnValue: false,
      ) as bool);
  @override
  String get token => (super.noSuchMethod(
        Invocation.getter(#token),
        returnValue: '',
      ) as String);
  @override
  String get deviceToken => (super.noSuchMethod(
        Invocation.getter(#deviceToken),
        returnValue: '',
      ) as String);
  @override
  _i4.Future<void> setAccessToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #setAccessToken,
          [token],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> setLogin(bool? value) => (super.noSuchMethod(
        Invocation.method(
          #setLogin,
          [value],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<void> setDeviceToken(String? deviceToken) => (super.noSuchMethod(
        Invocation.method(
          #setDeviceToken,
          [deviceToken],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
